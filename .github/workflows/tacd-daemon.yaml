name: tacd

on:
  pull_request:
    paths-ignore:
      - 'web/**'
  push:
    branches:
      - main
  schedule:
    - cron: '48 20 * * 4'

env:
  # Make sure cargo commands not only fail on hard errors but also on warnings
  # so we do not accidentally miss newly introduced warnings.
  RUSTFLAGS: -D warnings

jobs:
  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install stable
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    strategy:
      matrix:
        features:
          - ""
          - "--features=demo_mode --no-default-features"
          - "--tests"
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update
      - run: sudo apt install libsystemd-dev libiio-dev
      - run: rustup toolchain install stable
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: ${{ matrix.features }}
          name: Clippy Output

  check:
    strategy:
      fail-fast: false # Run against all versions even if one fails
      matrix:
        version:
          - "1.75" # Yocto scarthgap
          - "1.79" # Yocto styhead
          - "nightly"
    name: cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update
      - run: sudo apt install libsystemd-dev libiio-dev
      - run: rustup toolchain install ${{ matrix.version }}
      - uses: actions-rs/cargo@v1
        with:
          command: check

  deny:
    name: cargo deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1

  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update
      - run: sudo apt install libsystemd-dev libiio-dev
      - run: rustup toolchain install stable
      - uses: actions-rs/cargo@v1
        with:
          command: test
